
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eks-assistant-app
  labels:
    app: eks-assistant
spec:
  replicas: 2
  selector:
    matchLabels:
      app: eks-assistant
  template:
    metadata:
      labels:
        app: eks-assistant
    spec:
      serviceAccountName: eks-assistant-sa
      containers:
      - name: eks-assistant
        image: your-account.dkr.ecr.region.amazonaws.com/eks-assistant:latest
        ports:
        - containerPort: 8501
        env:
        - name: AWS_DEFAULT_REGION
          value: "us-west-2"  # 미국 서부 리전
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 8501
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8501
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: eks-assistant-service
  labels:
    app: eks-assistant
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8501
    protocol: TCP
  selector:
    app: eks-assistant
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: eks-assistant-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: eks-assistant-service
            port:
              number: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eks-assistant-sa
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::YOUR-ACCOUNT-ID:role/EKSAssistantRole
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eks-assistant-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eks-assistant-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eks-assistant-role
subjects:
- kind: ServiceAccount
  name: eks-assistant-sa
  namespace: default
